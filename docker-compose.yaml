version: '3.7'
services:
  # Redpanda cluster
  redpanda-1:
    image: docker.redpanda.com/vectorized/redpanda:v22.3.5
    container_name: redpanda-1
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '1'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda-1:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda-1:28082,OUTSIDE://localhost:8082
      - --rpc-addr
      - 0.0.0.0:33145
      - --advertise-rpc-addr
      - redpanda-1:33145
    ports:
      # - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092

  # Want a two node Redpanda cluster? Uncomment this block :)
  # redpanda-2:
  #   image: docker.redpanda.com/vectorized/redpanda:v22.2.2
  #   container_name: redpanda-2
  #   command:
  #     - redpanda
  #     - start
  #     - --smp
  #     - '1'
  #     - --reserve-memory
  #     - 0M
  #     - --overprovisioned
  #     - --node-id
  #     - '2'
  #     - --seeds
  #     - redpanda-1:33145
  #     - --kafka-addr
  #     - PLAINTEXT://0.0.0.0:29093,OUTSIDE://0.0.0.0:9093
  #     - --advertise-kafka-addr
  #     - PLAINTEXT://redpanda-2:29093,OUTSIDE://localhost:9093
  #     - --pandaproxy-addr
  #     - PLAINTEXT://0.0.0.0:28083,OUTSIDE://0.0.0.0:8083
  #     - --advertise-pandaproxy-addr
  #     - PLAINTEXT://redpanda-2:28083,OUTSIDE://localhost:8083
  #     - --rpc-addr
  #     - 0.0.0.0:33146
  #     - --advertise-rpc-addr
  #     - redpanda-2:33146
  #   ports:
  #     - 8083:8083
  #     - 9093:9093

  # Flink cluster
  jobmanager:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8081:8081
    command: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager        

  taskmanager:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - jobmanager
    command: taskmanager
    scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2 
       
  sql-client:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - /opt/flink/bin/sql-client.sh
      - embedded
      - -l
      - /opt/sql-client/lib

      # uncomment to run the "Hello, Flink" pipeline from a file
      # - -f
      # - /etc/sql/hello_flink.sql

      # uncomment to run the "Trade Stats" pipeline from a file
      # - -f
      # - /etc/sql/trade_stats.sql

      # Note: if you don't uncomment one of the pipelines above,
      # you'll be dropped into a SQL client CLI. This is a great for
      # experimentation and pipeline development :)
    depends_on:
      - jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        rest.address: jobmanager
    volumes:
      - ./01-flink-intro/sql:/etc/sql
